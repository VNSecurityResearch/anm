#define WIN_OS 1
#define WIN32_LEAN_AND_MEAN
#include<windows.h>
#include<winsock2.h>
#include<ws2tcpip.h>
#include<stdio.h>
#include<stdlib.h>
#include<commctrl.h>
#include<mswsock.h>
#include<conio.h>
#include<wincrypt.h>
#include<string.h>

#define LEN 20 
#define SUCCESS 1
#define FAIL 0
#define PORT "9005"
#define IP "10.61.214.216"

void dga(int);
void cal();

char buffer[18] = "";
int clientSocket;

int main() {
	printf("Domain Fluxing--------------------\n");

	int no = 0;
	do {
		printf("No: ");
		scanf("%d", &no);

		dga(no);
		printf("%s\n", buffer);
	} while (no != -1);

	/*struct sockaddr_in servaddr;
	WSADATA wsa = {};

	if (WSAStartup(WINSOCK_VERSION, &wsa)) {
	printf("Could not Start windows socket library!\n");
	return 0;
	}

	clientSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);

	servaddr.sin_family = AF_INET;
	inet_pton(AF_INET, IP, &(servaddr.sin_addr));
	servaddr.sin_port = htons(atoi(PORT));
	if (connect(clientSocket, (struct sockaddr *)&servaddr, sizeof(servaddr)) < 0) {
	printf("Could not establish new connection!\n");
	return 0;
	}

	int dem = 0;
	while (dem < 501) {

	char buffer[1024] = "";
	if (recv(clientSocket, buffer, sizeof(buffer), 0) > 0) {
	printf("%d, %s\n", (dem + 1), buffer);
	char *result = strstr(buffer, "ame: ");
	if (result == 0) {
	break;
	}
	int pos = result - buffer;
	swprintf(temp, L"%hs", &buffer[pos + 5]);

	temp[wcslen(temp) - 1] = 0;
	temp[wcslen(temp) - 1] = 0;

	wincript(temp);
	printf("%s", encrypt_str);

	if (send(clientSocket, encrypt_str, strlen(encrypt_str), 0) == SOCKET_ERROR) {
	printf("Can't send!\n");
	return 0;
	}
	else {
	printf("Sent\n");
	}
	}
	else {
	printf("No response!\n");
	}
	dem++;
	}

	closesocket(clientSocket);
	WSACleanup();*/

	getch();
	return 0;
}

void dga(int no) {
	int ebp4 = 1000;

	while (true) {
		if (ebp4 != 0) {
			ebp4--;

			int ecx;
			char al;
			char dl;

			char esi[] = "oGkS3w3sGGOGG7oc";
			ecx = 16;
			al = 0;
			dl = 0;

			int i = 0;
			while (i < ecx) {
				al = esi[i];
				dl += al;
				i++;
			}

			char edi[] = "ssrgwnrmgrxe.com";
			ecx = 12;

			int j = 0;
			while (j < ecx) {
				al += edi[j];
				al = al ^ dl;
				al += edi[j + 1];
				j++;
				if (al <= 0x61) {
					dl++;
				}
				else {
					if (al < 0x7A) {
						edi[j] = al;
						j++;
					}
					else {
						dl++;
					}
				}
			}

			strcpy(buffer, edi);
			strcat(buffer, "\n");
		}
		else {
			cal();
			ebp4 = 1000;
		}
	}
}

void cal() {

}
