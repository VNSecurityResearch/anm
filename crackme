import math
from random import shuffle


def en(n):
    n = hex(n)
    return int("0x" + n[(2 + len(n) - 10):], 16)


def fill_zero(n, max = 32):
    n = n[2:]
    result = n
    while len(result) < max:
        result = "0" + result
    return result


def ror8(n, num):
    num = num - (math.floor(num / 8) * 8)
    nb = fill_zero(bin(n), 8)
    return int(nb[(8 - num):] + "" + nb[0:(8 - num)], 2)


def rol8(n, num):
    num = num - (math.floor(num / 8) * 8)
    nb = fill_zero(bin(n), 8)
    return int(nb[num:] + "" + nb[0:num], 2)


def rol(n, num):
    num = num - (math.floor(num / 32) * 32)
    nb = fill_zero(bin(n))
    return int(nb[num:] + "" + nb[0:num], 2)


def shl(n, num):
    if n != 1:
        temp = fill_zero(bin(n))
        temp = temp[num:len(temp)]
        for i in range(0, num):
            temp += "0"
        return int(temp, 2)
    else:
        return 0


def bu2(n):
    if n < 0:
        return 2 ** 32 + n
    else:
        return n


def cal(me_origin, type):
    me_origin = list(me_origin)
    me = []
    for i in me_origin:
        me.append(ord(i))

    eax = me[2]
    eax = rol8(eax, 0x2)
    esi = eax

    eax = me[0]
    eax += 0x12
    ecx = eax

    eax = me[1]
    eax = eax - 0x78 + 2**8
    ecx = shl(ecx, 0x8)
    ecx = ecx | eax

    eax = me[3]
    ecx = shl(ecx, 0x8)
    esi = esi | ecx
    eax = ror8(eax, 0x4)
    esi = shl(esi, 0x8)
    esi = esi | eax

    if type == 1:
        esi = en(esi + 0xbabecafe)
        esi = rol(esi, 0x6)
        esi = bu2(0x13371337 - esi)
        esi = esi ^ 0x13371337
    elif type == 2:
        esi = bu2(0xdeadbeef - esi)

    return esi


string = "abcdefghijklmnopqrstuvwxyz_0987654321"
string = list(string)
shuffle(string)

need = [0x2648ed87, 0x94c3e659]

dem = 0
n = len(need)
for a in string:
    if dem == n:
        break
    for b in string:
        if dem == n:
            break
        for c in string:
            if dem == n:
                break
            for d in string:
                if dem == n:
                    break
                raw = a + "" + b + "" + c + "" + d
                for i in range(0, n):
                    me1 = cal(raw, i+1)
                    me2 = cal(raw.upper(), i+1)
                    if me1 == need[i]:
                        print(hex(me1) + " - " + raw)
                        dem += 1
                    if me2 == need[i]:
                        print(hex(me2) + " - " + raw.upper())
                        dem += 1
